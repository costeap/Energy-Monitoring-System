stages:
  - build
  - test
  - checkstyle
  - deploy

#build:
#  stage: build
#  image: maven:3.3.9-jdk-8
#  script:
#    - mvn clean package

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest


#test:
#    stage: test
#    image: maven:3.3.9-jdk-8
#    script:
#    - echo "Test DEMO app"
#    - mvn test && mvn jacoco:report
#    - cat target/site/jacoco/index.html | grep -o '.*'
#    coverage: "/Total.*?([0-9]{1,3})%/"


checkstyle:
    stage: checkstyle
    image: maven:3.3.9-jdk-8
    script:
    - echo "Checkstyle DEMO app"
    - mvn checkstyle:check

variables:
    DB_IP: ec2-54-76-43-89.eu-west-1.compute.amazonaws.com
    DB_PORT: 5432
    DB_USER: yjncexniuuqumm
    DB_PASSWORD: c5a5a3087ab07ddc60b0f645ea2acb7a55dafba2028fbef07e4013f4dfa150a8
    DB_DBNAME: d87otde80ass36
    
#deploy:
#  stage: deploy
#  image: ruby:3.1
#  script:
#    - apt-get update -qy
#    - apt-get install -y ruby-dev
#    - gem install dpl
#    - dpl --provider=heroku --app=spring-demo-sd2022-paula --api-key=$HEROKU_API_KEY
#  only:
#    - master

deploy:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  only:
    - master
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:latest $HEROKU_REGISTRY_IMAGE:latest
    - docker login --username=_ --password=$HEROKU_API_KEY $HEROKU_REGISTRY
    - docker push $HEROKU_REGISTRY_IMAGE:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app=spring-demo-sd2022-paula


